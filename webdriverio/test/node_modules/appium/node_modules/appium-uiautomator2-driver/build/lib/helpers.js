"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

require("source-map-support/register");

var _path = _interopRequireDefault(require("path"));

var _appiumSupport = require("appium-support");

let helpers = {};

helpers.ensureInternetPermissionForApp = async function (adb, app) {
  let has = await adb.hasInternetPermissionFromManifest(app);

  if (has) {
    return;
  }

  let msg = 'Your apk does not have INTERNET permissions. Uiautomator2 needs ' + 'the internet permission to proceed. Please check if you have ' + '<uses-permission android:name="android.**permission.INTERNET"/>' + 'in your AndroidManifest.xml';
  throw new Error(msg);
};

helpers.isWriteable = async function isWriteable(filePath) {
  try {
    await _appiumSupport.fs.access(filePath, _appiumSupport.fs.W_OK);
    return true;
  } catch (e) {
    return false;
  }
};

helpers.signApp = async function (adb, appPath) {
  if (!(await this.isWriteable(appPath))) {
    throw new Error(`The application at '${appPath}' is not writeable. ` + `Please grant write permissions to this file or to its parent folder '${_path.default.dirname(appPath)}' ` + `for the Appium process, so it could sign the application`);
  }

  await adb.sign(appPath);
};

var _default = helpers;
exports.default = _default;require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9oZWxwZXJzLmpzIl0sIm5hbWVzIjpbImhlbHBlcnMiLCJlbnN1cmVJbnRlcm5ldFBlcm1pc3Npb25Gb3JBcHAiLCJhZGIiLCJhcHAiLCJoYXMiLCJoYXNJbnRlcm5ldFBlcm1pc3Npb25Gcm9tTWFuaWZlc3QiLCJtc2ciLCJFcnJvciIsImlzV3JpdGVhYmxlIiwiZmlsZVBhdGgiLCJmcyIsImFjY2VzcyIsIldfT0siLCJlIiwic2lnbkFwcCIsImFwcFBhdGgiLCJwYXRoIiwiZGlybmFtZSIsInNpZ24iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBRUEsSUFBSUEsT0FBTyxHQUFHLEVBQWQ7O0FBRUFBLE9BQU8sQ0FBQ0MsOEJBQVIsR0FBeUMsZ0JBQWdCQyxHQUFoQixFQUFxQkMsR0FBckIsRUFBMEI7QUFDakUsTUFBSUMsR0FBRyxHQUFHLE1BQU1GLEdBQUcsQ0FBQ0csaUNBQUosQ0FBc0NGLEdBQXRDLENBQWhCOztBQUNBLE1BQUlDLEdBQUosRUFBUztBQUNQO0FBQ0Q7O0FBQ0QsTUFBSUUsR0FBRyxHQUFHLHFFQUNBLCtEQURBLEdBRUEsaUVBRkEsR0FHQSw2QkFIVjtBQUlBLFFBQU0sSUFBSUMsS0FBSixDQUFVRCxHQUFWLENBQU47QUFDRCxDQVZEOztBQVlBTixPQUFPLENBQUNRLFdBQVIsR0FBc0IsZUFBZUEsV0FBZixDQUE0QkMsUUFBNUIsRUFBc0M7QUFDMUQsTUFBSTtBQUNGLFVBQU1DLGtCQUFHQyxNQUFILENBQVVGLFFBQVYsRUFBb0JDLGtCQUFHRSxJQUF2QixDQUFOO0FBQ0EsV0FBTyxJQUFQO0FBQ0QsR0FIRCxDQUdFLE9BQU9DLENBQVAsRUFBVTtBQUNWLFdBQU8sS0FBUDtBQUNEO0FBQ0YsQ0FQRDs7QUFTQWIsT0FBTyxDQUFDYyxPQUFSLEdBQWtCLGdCQUFnQlosR0FBaEIsRUFBcUJhLE9BQXJCLEVBQThCO0FBQzlDLE1BQUksRUFBQyxNQUFNLEtBQUtQLFdBQUwsQ0FBaUJPLE9BQWpCLENBQVAsQ0FBSixFQUFzQztBQUNwQyxVQUFNLElBQUlSLEtBQUosQ0FBVyx1QkFBc0JRLE9BQVEsc0JBQS9CLEdBQ2Isd0VBQXVFQyxjQUFLQyxPQUFMLENBQWFGLE9BQWIsQ0FBc0IsSUFEaEYsR0FFYiwwREFGRyxDQUFOO0FBR0Q7O0FBQ0QsUUFBTWIsR0FBRyxDQUFDZ0IsSUFBSixDQUFTSCxPQUFULENBQU47QUFDRCxDQVBEOztlQVNlZixPIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHBhdGggZnJvbSAncGF0aCc7XG5pbXBvcnQgeyBmcyB9IGZyb20gJ2FwcGl1bS1zdXBwb3J0JztcblxubGV0IGhlbHBlcnMgPSB7fTtcblxuaGVscGVycy5lbnN1cmVJbnRlcm5ldFBlcm1pc3Npb25Gb3JBcHAgPSBhc3luYyBmdW5jdGlvbiAoYWRiLCBhcHApIHtcbiAgbGV0IGhhcyA9IGF3YWl0IGFkYi5oYXNJbnRlcm5ldFBlcm1pc3Npb25Gcm9tTWFuaWZlc3QoYXBwKTtcbiAgaWYgKGhhcykge1xuICAgIHJldHVybjtcbiAgfVxuICBsZXQgbXNnID0gJ1lvdXIgYXBrIGRvZXMgbm90IGhhdmUgSU5URVJORVQgcGVybWlzc2lvbnMuIFVpYXV0b21hdG9yMiBuZWVkcyAnICtcbiAgICAgICAgICAgICd0aGUgaW50ZXJuZXQgcGVybWlzc2lvbiB0byBwcm9jZWVkLiBQbGVhc2UgY2hlY2sgaWYgeW91IGhhdmUgJyArXG4gICAgICAgICAgICAnPHVzZXMtcGVybWlzc2lvbiBhbmRyb2lkOm5hbWU9XCJhbmRyb2lkLioqcGVybWlzc2lvbi5JTlRFUk5FVFwiLz4nICtcbiAgICAgICAgICAgICdpbiB5b3VyIEFuZHJvaWRNYW5pZmVzdC54bWwnO1xuICB0aHJvdyBuZXcgRXJyb3IobXNnKTtcbn07XG5cbmhlbHBlcnMuaXNXcml0ZWFibGUgPSBhc3luYyBmdW5jdGlvbiBpc1dyaXRlYWJsZSAoZmlsZVBhdGgpIHtcbiAgdHJ5IHtcbiAgICBhd2FpdCBmcy5hY2Nlc3MoZmlsZVBhdGgsIGZzLldfT0spO1xuICAgIHJldHVybiB0cnVlO1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59O1xuXG5oZWxwZXJzLnNpZ25BcHAgPSBhc3luYyBmdW5jdGlvbiAoYWRiLCBhcHBQYXRoKSB7XG4gIGlmICghYXdhaXQgdGhpcy5pc1dyaXRlYWJsZShhcHBQYXRoKSkge1xuICAgIHRocm93IG5ldyBFcnJvcihgVGhlIGFwcGxpY2F0aW9uIGF0ICcke2FwcFBhdGh9JyBpcyBub3Qgd3JpdGVhYmxlLiBgICtcbiAgICAgIGBQbGVhc2UgZ3JhbnQgd3JpdGUgcGVybWlzc2lvbnMgdG8gdGhpcyBmaWxlIG9yIHRvIGl0cyBwYXJlbnQgZm9sZGVyICcke3BhdGguZGlybmFtZShhcHBQYXRoKX0nIGAgK1xuICAgICAgYGZvciB0aGUgQXBwaXVtIHByb2Nlc3MsIHNvIGl0IGNvdWxkIHNpZ24gdGhlIGFwcGxpY2F0aW9uYCk7XG4gIH1cbiAgYXdhaXQgYWRiLnNpZ24oYXBwUGF0aCk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBoZWxwZXJzO1xuIl0sImZpbGUiOiJsaWIvaGVscGVycy5qcyIsInNvdXJjZVJvb3QiOiIuLi8uLiJ9
